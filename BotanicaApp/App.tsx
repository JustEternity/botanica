import React, { useState, useRef, useCallback, useEffect } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { 
  View, 
  Text, 
  StyleSheet, 
  FlatList, 
  TouchableOpacity,
  Image,
  ScrollView,
  LayoutAnimation,
  Platform,
  UIManager,
  NativeSyntheticEvent,
  NativeScrollEvent
} from 'react-native';

// –í–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è Android
if (Platform.OS === 'android' && UIManager.setLayoutAnimationEnabledExperimental) {
  UIManager.setLayoutAnimationEnabledExperimental(true);
}

// –§–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–µ–Ω—é
const MENU_DATA = [
  {
    id: '1',
    title: '–ö–∞–ª—å—è–Ω—ã',
    data: [
      { 
        id: '1', 
        name: '–ö–∞–ª—å—è–Ω —è–±–ª–æ—á–Ω—ã–π', 
        price: 1200, 
        description: '–°–≤–µ–∂–∏–π —Ç–∞–±–∞–∫ –Ω–∞ —è–±–ª–æ–∫–µ',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=üçé' 
      },
      { 
        id: '2', 
        name: '–ö–∞–ª—å—è–Ω –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π', 
        price: 1000, 
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å—è–Ω —Å –º–æ–ª–æ–∫–æ–º',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=üí®' 
      },
      { 
        id: '3', 
        name: '–ö–∞–ª—å—è–Ω –ø—Ä–µ–º–∏—É–º', 
        price: 1500, 
        description: '–ü—Ä–µ–º–∏—É–º —Ç–∞–±–∞–∫ –∏ —É–≥–ª–∏',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=‚≠ê' 
      }
    ]
  },
  {
    id: '2', 
    title: '–ù–∞–ø–∏—Ç–∫–∏',
    data: [
      { 
        id: '4', 
        name: '–ß–∞–π –∑–µ–ª–µ–Ω—ã–π', 
        price: 300, 
        description: '–°–≤–µ–∂–µ–∑–∞–≤–∞—Ä–µ–Ω–Ω—ã–π —á–∞–π',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=üçµ' 
      },
      { 
        id: '5', 
        name: '–ö–æ—Ñ–µ –ª–∞—Ç—Ç–µ', 
        price: 350, 
        description: '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ —Å –º–æ–ª–æ–∫–æ–º',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=‚òï' 
      },
      { 
        id: '6', 
        name: '–ú–æ—Ä—Å –∫–ª—é–∫–≤–µ–Ω–Ω—ã–π', 
        price: 250, 
        description: '–û—Å–≤–µ–∂–∞—é—â–∏–π –º–æ—Ä—Å',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=ü•§' 
      }
    ]
  },
  {
    id: '3',
    title: '–ó–∞–∫—É—Å–∫–∏',
    data: [
      { 
        id: '7', 
        name: '–ß–∏–ø—Å—ã', 
        price: 200, 
        description: '–•—Ä—É—Å—Ç—è—â–∏–µ —á–∏–ø—Å—ã',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=ü•î' 
      },
      { 
        id: '8', 
        name: '–û—Ä–µ—à–∫–∏', 
        price: 180, 
        description: '–ê—Å—Å–æ—Ä—Ç–∏ –æ—Ä–µ—Ö–æ–≤',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=ü•ú' 
      }
    ]
  },
  {
    id: '4',
    title: '–î–µ—Å–µ—Ä—Ç—ã', 
    data: [
      { 
        id: '9', 
        name: '–¢–∏—Ä–∞–º–∏—Å—É', 
        price: 400, 
        description: '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=üç∞' 
      },
      { 
        id: '10', 
        name: '–ß–∏–∑–∫–µ–π–∫', 
        price: 350, 
        description: '–ù–µ–∂–Ω—ã–π —á–∏–∑–∫–µ–π–∫',
        image: 'https://via.placeholder.com/80x80/2E7D32/FFFFFF?text=üéÇ' 
      }
    ]
  }
];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–∫—Ä–∞–Ω–∞ –º–µ–Ω—é —Å —Ç–æ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
function MenuScreen() {
  const [selectedCategory, setSelectedCategory] = useState('1');
  const [isScrolling, setIsScrolling] = useState(false);
  const [headerHeight, setHeaderHeight] = useState(0);
  const scrollTimeoutRef = useRef<NodeJS.Timeout | null>(null);
  const categoriesRef = useRef<FlatList>(null);
  const scrollViewRef = useRef<ScrollView>(null);
  const categoryRefs = useRef<{[key: string]: View}>({});

  // –ò–∑–º–µ—Ä—è–µ–º –≤—ã—Å–æ—Ç—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const measureHeader = useCallback((event: any) => {
    const { height } = event.nativeEvent.layout;
    setHeaderHeight(height);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–æ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const scrollToCategory = useCallback((categoryId: string) => {
    if (isScrolling) return;

    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
    setSelectedCategory(categoryId);
    setIsScrolling(true);
    
    const categoryHeader = categoryRefs.current[categoryId];
    
    if (scrollViewRef.current && categoryHeader) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º measure –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
      categoryHeader.measure((_x: number, _y: number, _width: number, _height: number, _pageX: number, pageY: number) => {
        // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —Å —É—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        const scrollPosition = Math.max(0, pageY - headerHeight - 10); // -10 –¥–ª—è –Ω–µ–±–æ–ª—å—à–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞
        
        scrollViewRef.current?.scrollTo({ 
          y: scrollPosition, 
          animated: true 
        });
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
          setIsScrolling(false);
        }, 500);
      });
    }

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π
    const categoryDataIndex = MENU_DATA.findIndex(section => section.id === categoryId);
    if (categoriesRef.current && categoryDataIndex !== -1) {
      categoriesRef.current.scrollToIndex({
        index: categoryDataIndex,
        animated: true,
        viewPosition: 0.5
      });
    }

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
    if (scrollTimeoutRef.current) {
      clearTimeout(scrollTimeoutRef.current);
    }
  }, [isScrolling, headerHeight]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const handleScroll = useCallback((event: NativeSyntheticEvent<NativeScrollEvent>) => {
    const { contentOffset } = event.nativeEvent;
    const scrollY = contentOffset.y;
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º —Å–∫—Ä–æ–ª–ª–∏—Ç, –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if (isScrolling) return;

    // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é –≤–∏–¥–∏–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    let closestCategory = selectedCategory;
    let minDistance = Infinity;

    MENU_DATA.forEach(category => {
      const categoryHeader = categoryRefs.current[category.id];
      if (categoryHeader) {
        categoryHeader.measure((_x: number, _y: number, _width: number, _height: number, _pageX: number, pageY: number) => {
          // –£—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
          const categoryTop = pageY - headerHeight;
          const distance = Math.abs(scrollY - categoryTop);
          
          if (distance < minDistance) {
            minDistance = distance;
            closestCategory = category.id;
          }

          // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          if (category.id === MENU_DATA[MENU_DATA.length - 1].id && closestCategory !== selectedCategory) {
            setSelectedCategory(closestCategory);
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ –∞–∫—Ç–∏–≤–Ω–æ–π
            const categoryDataIndex = MENU_DATA.findIndex(section => section.id === closestCategory);
            if (categoriesRef.current && categoryDataIndex !== -1) {
              categoriesRef.current.scrollToIndex({
                index: categoryDataIndex,
                animated: true,
                viewPosition: 0.5
              });
            }
          }
        });
      }
    });

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞
    if (scrollTimeoutRef.current) {
      clearTimeout(scrollTimeoutRef.current);
    }
    
    const newTimeout = setTimeout(() => {
      setIsScrolling(false);
    }, 100);
    
    scrollTimeoutRef.current = newTimeout;
  }, [selectedCategory, isScrolling, headerHeight]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Å–∫—Ä–æ–ª–ª–∞
  const handleScrollBeginDrag = useCallback(() => {
    setIsScrolling(true);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞
  const handleScrollEndDrag = useCallback(() => {
    const timeout = setTimeout(() => {
      setIsScrolling(false);
    }, 100);
    scrollTimeoutRef.current = timeout;
  }, []);

  // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    return () => {
      if (scrollTimeoutRef.current) {
        clearTimeout(scrollTimeoutRef.current);
      }
    };
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º ref –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const setCategoryRef = useCallback((categoryId: string) => (ref: View) => {
    categoryRefs.current[categoryId] = ref;
  }, []);

  return (
    <View style={styles.container}>
      {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <View 
        style={styles.headerContainer}
        onLayout={measureHeader}
      >
        <Text style={styles.title}>üçΩÔ∏è –ú–µ–Ω—é Botanica</Text>
        
        {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –æ–≤–∞–ª—å—á–∏–∫–∞—Ö */}
        <View style={styles.categoriesContainer}>
          <FlatList
            ref={categoriesRef}
            data={MENU_DATA}
            horizontal
            showsHorizontalScrollIndicator={false}
            keyExtractor={(item) => item.id}
            renderItem={({ item }) => (
              <TouchableOpacity
                style={[
                  styles.categoryButton,
                  selectedCategory === item.id && styles.categoryButtonActive
                ]}
                onPress={() => scrollToCategory(item.id)}
                activeOpacity={0.7}
              >
                <Text style={[
                  styles.categoryText,
                  selectedCategory === item.id && styles.categoryTextActive
                ]}>
                  {item.title}
                </Text>
              </TouchableOpacity>
            )}
            contentContainerStyle={styles.categoriesList}
          />
        </View>
      </View>

      {/* ScrollView —Å —Ç–æ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π */}
      <ScrollView 
        ref={scrollViewRef}
        style={styles.menuContainer}
        showsVerticalScrollIndicator={false}
        onScroll={handleScroll}
        onScrollBeginDrag={handleScrollBeginDrag}
        onScrollEndDrag={handleScrollEndDrag}
        scrollEventThrottle={16}
        contentContainerStyle={styles.scrollContent}
      >
        {MENU_DATA.map(category => (
          <View key={category.id}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å ref –¥–ª—è —Ç–æ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */}
            <View 
              style={styles.sectionHeader}
              ref={setCategoryRef(category.id)}
            >
              <Text style={styles.sectionTitle}>{category.title}</Text>
            </View>
            
            {/* –ü–æ–∑–∏—Ü–∏–∏ –º–µ–Ω—é –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
            {category.data.map(item => (
              <View key={item.id} style={styles.menuItem}>
                <Image 
                  source={{ uri: item.image }} 
                  style={styles.itemImage}
                  resizeMode="cover"
                />
                
                <View style={styles.itemContent}>
                  <View style={styles.itemHeader}>
                    <Text style={styles.itemName}>{item.name}</Text>
                    <Text style={styles.itemPrice}>{item.price} ‚ÇΩ</Text>
                  </View>
                  <Text style={styles.itemDescription}>{item.description}</Text>
                </View>
              </View>
            ))}
          </View>
        ))}
        
        {/* –û—Ç—Å—Ç—É–ø –≤–Ω–∏–∑—É */}
        <View style={styles.bottomSpace} />
      </ScrollView>
    </View>
  );
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏)
function ProfileScreen() {
  return (
    <View style={styles.simpleContainer}>
      <Text style={styles.simpleTitle}>üë§ –ü—Ä–æ—Ñ–∏–ª—å</Text>
      <Text>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</Text>
    </View>
  );
}

function HallMapScreen() {
  return (
    <View style={styles.simpleContainer}>
      <Text style={styles.simpleTitle}>üó∫Ô∏è –°—Ö–µ–º–∞ –∑–∞–ª–∞</Text>
      <Text>–°—Ö–µ–º–∞ —Å—Ç–æ–ª–æ–≤ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</Text>
    </View>
  );
}

function AboutScreen() {
  return (
    <View style={styles.simpleContainer}>
      <Text style={styles.simpleTitle}>‚ÑπÔ∏è –û –Ω–∞—Å</Text>
      <Text>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ñ–µ Botanica</Text>
    </View>
  );
}

const Tab = createBottomTabNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Tab.Navigator
        initialRouteName="Menu"
        screenOptions={{
          headerStyle: {
            backgroundColor: '#2E7D32',
          },
          headerTintColor: '#fff',
          headerTitleStyle: {
            fontWeight: 'bold',
          },
          tabBarActiveTintColor: '#2E7D32',
          tabBarStyle: {
            paddingVertical: 5,
          },
        }}
      >
        <Tab.Screen 
          name="Menu" 
          component={MenuScreen}
          options={{
            title: '–ú–µ–Ω—é',
            tabBarLabel: '–ú–µ–Ω—é',
            tabBarIcon: ({ color, size }) => (
              <Text style={{ fontSize: 20 }}>üçΩÔ∏è</Text>
            ),
          }}
        />
        <Tab.Screen 
          name="HallMap" 
          component={HallMapScreen}
          options={{
            title: '–°—Ö–µ–º–∞ –∑–∞–ª–∞',
            tabBarLabel: '–°—Ö–µ–º–∞ –∑–∞–ª–∞',
            tabBarIcon: ({ color, size }) => (
              <Text style={{ fontSize: 20 }}>üó∫Ô∏è</Text>
            ),
          }}
        />
        <Tab.Screen 
          name="Profile" 
          component={ProfileScreen}
          options={{
            title: '–ü—Ä–æ—Ñ–∏–ª—å',
            tabBarLabel: '–ü—Ä–æ—Ñ–∏–ª—å',
            tabBarIcon: ({ color, size }) => (
              <Text style={{ fontSize: 20 }}>üë§</Text>
            ),
          }}
        />
        <Tab.Screen 
          name="About" 
          component={AboutScreen}
          options={{
            title: '–û –Ω–∞—Å',
            tabBarLabel: '–û –Ω–∞—Å',
            tabBarIcon: ({ color, size }) => (
              <Text style={{ fontSize: 20 }}>‚ÑπÔ∏è</Text>
            ),
          }}
        />
      </Tab.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  // –°—Ç–∏–ª–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –º–µ–Ω—é
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  headerContainer: {
    backgroundColor: '#fff',
    zIndex: 10,
    // –¢–µ–Ω—å –¥–ª—è iOS
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    // –¢–µ–Ω—å –¥–ª—è Android
    elevation: 5,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#2E7D32',
    marginBottom: 10,
    textAlign: 'center',
    marginTop: 10,
  },
  categoriesContainer: {
    marginBottom: 10,
    paddingHorizontal: 10,
    paddingBottom: 10,
    height: 60,
  },
  categoriesList: {
    paddingHorizontal: 5,
  },
  categoryButton: {
    paddingHorizontal: 20,
    paddingVertical: 10,
    backgroundColor: '#f5f5f5',
    borderRadius: 25,
    marginRight: 10,
    justifyContent: 'center',
    marginVertical: 5,
    minWidth: 100,
  },
  categoryButtonActive: {
    backgroundColor: '#2E7D32',
  },
  categoryText: {
    fontSize: 14,
    color: '#666',
    fontWeight: '500',
    textAlign: 'center',
  },
  categoryTextActive: {
    color: '#fff',
    fontWeight: 'bold',
  },
  menuContainer: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: 16,
  },
  sectionHeader: {
    backgroundColor: '#f8f8f8',
    paddingVertical: 12,
    paddingHorizontal: 16,
    marginTop: 10,
    marginBottom: 8,
    borderRadius: 8,
    borderLeftWidth: 4,
    borderLeftColor: '#2E7D32',
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#2E7D32',
  },
  menuItem: {
    backgroundColor: '#f9f9f9',
    padding: 12,
    borderRadius: 8,
    marginBottom: 12,
    flexDirection: 'row',
    alignItems: 'center',
  },
  itemImage: {
    width: 80,
    height: 80,
    borderRadius: 8,
    marginRight: 12,
  },
  itemContent: {
    flex: 1,
  },
  itemHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 8,
  },
  itemName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    flex: 1,
  },
  itemPrice: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#2E7D32',
    marginLeft: 10,
  },
  itemDescription: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
  },
  bottomSpace: {
    height: 20,
  },
  
  // –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
  simpleContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#fff',
    padding: 20,
  },
  simpleTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#2E7D32',
  },
});